[{"categories":["C/C++"],"content":"题目描述 Bubble Sort Write a program of the Bubble Sort algorithm which sorts a sequence A in ascending order. The algorithm should be based on the following pseudocode: BubbleSort(A) 1 for i = 0 to A.length-1 2 for j = A.length-1 downto i+1 3 if A[j] 4 swap A[j] and A[j-1] Note that, indices for array elements are based on 0-origin. Your program should also print the number of swap operations defined in line 4 of the pseudocode. 输入 The first line of the input includes an integer N, the number of elements in the sequence. In the second line, N elements of the sequence are given separated by spaces characters. 输出 The output consists of 2 lines. In the first line, please print the sorted sequence. Two contiguous elements of the sequence should be separated by a space character. In the second line, please print the number of swap operations. #include\u003cbits/stdc++.h\u003e using namespace std; int bubble_sort(int a[], int n) { int cnt = 0; for (int i = 0; i \u003c n - 1; i++) for (int j = n - 1; j \u003e= i + 1; j--) if (a[j] \u003c a[j - 1]) cnt++, swap(a[j], a[j - 1]); return cnt; } void output_result(int a[], int n) { for (int i = 0; i \u003c n; i++) { if (i \u003e 0) cout \u003c\u003c \" \"; cout \u003c\u003c a[i]; } cout \u003c\u003c endl; } const int N = 100; int a[N]; int main() { int n; cin \u003e\u003e n; for (int i = 0; i \u003c n; i++) cin \u003e\u003e a[i]; int cnt = bubble_sort(a, n); output_result(a, n); cout \u003c\u003c cnt \u003c\u003c endl; return 0; }  ","date":"2020-12-22","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/531/:0:0","tags":["acm","C/C++","编程"],"title":"Sort I – Bubble Sort","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/531/"},{"categories":["C/C++"],"content":"题目描述 Insertion Sort Write a program of the Insertion Sort algorithm which sorts a sequence A in ascending order. The algorithm should be based on the following pseudocode: for i = 1 to A.length-1 key = A[i] /* insert A[i] into the sorted sequence A[0,…,j-1] */ j = i – 1 while j = 0 and A[j] key A[j+1] = A[j] j– A[j+1] = key Note that, indices for array elements are based on 0-origin. To illustrate the algorithms, your program should trace intermediate result for each step. 输入 The first line of the input includes an integer N, the number of elements in the sequence. In the second line, N elements of the sequence are given separated by a single space. 输出 The output consists of N lines. Please output the intermediate sequence in a line for each step. Elements of the sequence should be separated by single space. # include \u003cbits/stdc++.h\u003e using namespace std; int a[101]; int n; void output() { for (int i = 0; i \u003c n; i++) { if (i + 1 != n) cout \u003c\u003c a[i] \u003c\u003c \" \"; else cout \u003c\u003c a[i] \u003c\u003c endl; } } void InsertSort() { for (int i = 0; i \u003c n - 1; i++) { int temp = a[i + 1]; for (int j = i; j \u003e= 0; j--) { if (temp \u003c a[j]) { a[j + 1] = a[j]; a[j] = temp; } else { break; } } output(); } } int main() { cin \u003e\u003e n; for (int i = 0; i \u003c n; i++) { cin \u003e\u003e a[i]; } output(); InsertSort(); return 0; }  ","date":"2020-12-22","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/529/:0:0","tags":["acm","C/C++","编程"],"title":"Getting Started – Insertion Sort","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/529/"},{"categories":["C/C++"],"content":"题目描述 You manage 4 buildings, each of which has 3 floors, each of which consists of 10 rooms. Write a program which reads a sequence of tenant/leaver notices, and reports the number of tenants for each room. For each notice, you are given four integers b, f, r and v which represent that v persons entered to room r of fth floor at building b. If v is negative, it means that v persons left. Assume that initially no person lives in the building. 输入 In the first line, the number of notices n is given. In the following n lines, a set of four integers b, f, r and v which represents ith notice is given in a line. 输出 For each building, print the information of 1st, 2nd and 3rd floor in this order. For each floor information, print the number of tenants of 1st, 2nd, .. and 10th room in this order. Print a single space character before the number of tenants. Print “####################” (20 ‘#’) between buildings. #include \u003cbits/stdc++.h\u003e using namespace std; int B[4][3][10]; int main() { int n,b, f, r, v; cin \u003e\u003e n; while (n--) { cin \u003e\u003e b \u003e\u003e f \u003e\u003e r \u003e\u003e v; B[b - 1][f - 1][r - 1] += v; } for (int i = 0; i \u003c 4; i++) { for (int j = 0; j \u003c 3; j++) { for (int k = 0; k \u003c 10; k++) { cout \u003c\u003c\" \"; cout \u003c\u003c B[i][j][k]; } cout \u003c\u003c endl; } if (i \u003c 3) { cout \u003c\u003c \"####################\" \u003c\u003c endl; } } return 0; }  ","date":"2020-11-25","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/412/:0:0","tags":["acm","C/C++","编程"],"title":"Array – Official House","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/412/"},{"categories":["C/C++"],"content":"题目描述 Matrix Vector Multiplication Write a program which reads a n×m matrix A and a m×1 vector b, and prints their product Ab. A column vector with m elements is represented by the following equation. A n×m matrix with mm column vectors, each of which consists of n elements, is represented by the following equation. i-th element of a m×1 column vector b is represented by bi (i=1,2,…,m), and the element in i-th row and j-th column of a matrix A is represented by aij (i=1,2,…,n,j=1,2,…,m). The product of a n×m matrix A and a m×1 column vector b is a n×1 column vector c, and ci is obtained by the following formula: 输入 In the first line, two integers n and m are given. In the following n lines, aij are given separated by a single space character. In the next mm lines, bi is given in a line. 输出 The output consists of n lines. Print ci in a line. #include \u003cstdio.h\u003e int main() { int m, n, t; scanf(\"%d%d\", \u0026m, \u0026n); int a1[m][n], a2[n]; for (int a = 0; a \u003c m; ++a) { for (int b = 0; b \u003c n; ++b) { scanf(\"%d\", \u0026t); a1[a][b] = t; } } for (int a = 0; a \u003c n; ++a) { scanf(\"%d\", \u0026t); a2[a] = t; } for (int i = 0; i \u003c m; ++i) { int sum=0; for (int k = 0; k \u003c n; ++k) { sum += a1[i][k]*a2[k]; } printf(\"%d\\n\", sum); } }  ","date":"2020-11-20","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/396/:0:0","tags":["acm","C/C++","编程"],"title":"Array – Matrix Vector Multiplication","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/396/"},{"categories":["C/C++"],"content":"题目描述 Reversing Numbers Write a program which reads a sequence and prints it in the reverse order. 输入 The input is given in the following format: n a1 a2 . . . an n is the size of the sequence and ai is the ith element of the sequence. 输出 Print the reversed sequence in a line. Print a single space character between adjacent elements (Note that your program should not put a space character after the last element). n ≤ 100 ; 0 ≤ ai #include\u003cbits/stdc++.h\u003e using namespace std; int main(){ int n,i; cin\u003e\u003en; int a[100]; for(i=0;i\u003cn;i++){ scanf(\"%d\",\u0026a[i]); } for(i=n-1;i\u003e=0;i--){ printf(\"%d \",a[i]);} return 0; } \u003cp\u003e \u0026nbsp; \u003c/p\u003e ","date":"2020-11-16","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/380/:0:0","tags":["acm","C/C++","编程"],"title":"Array – Reversing Numbers","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/380/"},{"categories":["C/C++"],"content":"题目描述 Print a Chessboard Draw a chessboard which has a height of H cm and a width of W cm. For example, the following figure shows a chessboard which has a height of 6 cm and a width of 10 cm. #.#.#.#.#. .#.#.#.#.# #.#.#.#.#. .#.#.#.#.# #.#.#.#.#. .#.#.#.#.# Note that the top left corner should be drawn by ‘#’. 输入 The input consists of multiple datasets. Each dataset consists of two integers H and W separated by a single space. The input ends with two 0 (when both H and W are zero). 输出 For each dataset, print the chessboard made of ‘#’ and ‘.’. Print a blank line after each dataset. ","date":"2020-11-05","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/291/:0:0","tags":["acm","C/C++","编程"],"title":"Structured Program I – Print a Chessboard","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/291/"},{"categories":["C/C++"],"content":"解法一： #include\u003ciostream\u003e using namespace std; int main() { int h,w; cin \u003e\u003e h \u003e\u003e w; while(h!=0) { int i,j; for(i=0;i\u003ch;i++) { for(j=0;j\u003cw;j++) { if((i%2==0\u0026\u0026j%2==0||i%2==1\u0026\u0026j%2==1)) cout \u003c\u003c \"#\"; else cout \u003c\u003c \".\"; } cout \u003c\u003c endl; } cout \u003c\u003c endl; cin \u003e\u003e h \u003e\u003e w; } return 0; } ","date":"2020-11-05","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/291/:1:0","tags":["acm","C/C++","编程"],"title":"Structured Program I – Print a Chessboard","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/291/"},{"categories":["C/C++"],"content":"解法二（有错误）： #include\u003cbits/stdc++.h\u003e using namespace std; int main() { int h,w,i=0,j; while(scanf(\"%d %d\",\u0026h,\u0026w)!=EOF) { if(h==0\u0026\u0026w==0) { break; } else { for(j=1; j\u003c=h; j++) { if(j%2!=0) { for(i=1; i\u003c=w; i++) { if(i%2==0) { cout\u003c\u003c\".\"; } else { cout\u003c\u003c\"#\"; } } } else { for(i=1; i\u003c=w; i++) { if(i%2==0) { cout\u003c\u003c\"#\"; } else { cout\u003c\u003c\".\"; } } } cout\u003c\u003cendl; } } } return 0; }  ","date":"2020-11-05","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/291/:2:0","tags":["acm","C/C++","编程"],"title":"Structured Program I – Print a Chessboard","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/291/"},{"categories":["C/C++"],"content":"题目描述 如果-个数 n 能被各位数字之和整除，那么这个数就是 Lucky Word。 输入 多组输入 每行一个数n 输出 如果这个数是Lucky Word 那么输出 “Lucky Word”,否则输出 “No Answer”。 #include\u003cstdio.h\u003e int main() { int n, a, b, i = 1; int c[100]; while (1 == scanf(\"%d\", \u0026n)) { int s = 0; a = n % 10; b = n / 10; while (b != 0) { c[i] = b % 10; b = b / 10; s = s + c[i]; i++; } s = s + a; if (n % s == 0) { printf(\"Lucky Word\\n\"); } else { printf(\"No Answer\\n\"); } } return 0; }  ","date":"2020-10-31","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/280/:0:0","tags":["acm","C/C++","编程"],"title":"Lucky Words","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/280/"},{"categories":["C/C++"],"content":"题目描述 Swapping Two Numbers Write a program which reads two integers x and y, and prints them in ascending order. 输入 The input consists of multiple datasets. Each dataset consists of two integers x and y separated by a single space. The input ends with two 0 (when both x and y are zero). Your program should not process for these terminal symbols. 输出 For each dataset, print x and y in ascending order in a line. Put a single space between x and y. #include\u003cbits/stdc++.h\u003e\rusing namespace std;\rint main(){\rint a,b;\rwhile(scanf(\"%d %d\",\u0026a,\u0026b)!=EOF){\rif(a==0\u0026\u0026b==0){\rreturn 0;\r}\relse{\rif(a\u003cb){\rcout\u003c\u003ca\u003c\u003c\" \"\u003c\u003cb\u003c\u003cendl;\r}\relse{\rcout\u003c\u003cb\u003c\u003c\" \"\u003c\u003ca\u003c\u003cendl;\r}\r}\r}\r}  ","date":"2020-10-28","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/150/:0:0","tags":["acm","C/C++","编程"],"title":"Swapping Two Numbers","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/150/"},{"categories":["C/C++"],"content":"题目描述 How Many Divisors? Write a program which reads three integers a, b and c, and prints the number of divisors of c between a and b. 输入 Three integers a, b and c are given in a line separated by a single space. 输出 Print the number of divisors in a line. #include\u003cbits/stdc++.h\u003e using namespace std; int main(){ int a,b,c,i=0; scanf(\"%d %d %d\",\u0026a,\u0026b,\u0026c); while(a\u003c=b){ if(c%a==0){ i=i+1; } a=a+1; } cout\u003c\u003ci\u003c\u003cendl; return 0; }  ","date":"2020-10-27","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/174/:0:0","tags":["acm","C/C++","编程"],"title":"Repetitive Processing – How Many Divisors?","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/174/"},{"categories":["C/C++"],"content":"题目描述 Print Test Cases In an online judge system, a judge file may includes multiple datasets to check whether the submitted program outputs a correct answer for each test case. This task is to practice solving a problem with multiple datasets. Write a program which reads an integer x and print it as is. Note that multiple datasets are given for this problem. 输入 The input consists of multiple datasets. Each dataset consists of an integer x in a line. The input ends with an integer 0. You program should not process (print) for this terminal symbol. 输出 For each dataset, print x in the following format: Case i: x where i is the case number which starts with 1. Put a single space between “Case” and i. Also, put a single space between ‘:’ and x. #include\u003cbits/stdc++.h\u003e\rusing namespace std;\rint main(){\rint a,i=0;\rwhile(scanf(\"%d\",\u0026a)!=EOF){\rif(a==0){\rreturn 0;\r}\relse{\ri=i+1;\rprintf(\"Case %d: %d\\n\",i,a);\ra=0;}\r}\rreturn 0;\r}  ","date":"2020-10-27","objectID":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/130/:0:0","tags":["acm","C/C++","编程"],"title":"Repetitive Processing – Print Test Cases","uri":"/2020/%E7%BC%96%E7%A8%8B/c-cpp/130/"}]